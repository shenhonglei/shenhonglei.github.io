<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSDN - 专业开发者社区 on Honglei | Honglei's Blog</title><link>https://shenhonglei.com/csdn/</link><description>Recent content in CSDN - 专业开发者社区 on Honglei | Honglei's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-zh</language><copyright>Copyright &amp;copy; 2020 [申红磊](https://shenhonglei.com) All Rights Reserved</copyright><lastBuildDate>Tue, 15 Dec 2020 13:01:50 +0000</lastBuildDate><atom:link href="https://shenhonglei.com/csdn/index.xml" rel="self" type="application/rss+xml"/><item><title>k8s 上部署 Metrics Server</title><link>https://shenhonglei.com/csdn/kubernetes-metrics-server/</link><pubDate>Tue, 15 Dec 2020 13:01:50 +0000</pubDate><guid>https://shenhonglei.com/csdn/kubernetes-metrics-server/</guid><description>环境 Mac 系统里 docker-desktop上运行的 Kubernetes v1.19.3 上启动Metrics Server
场景 资源使用指标，例如容器 CPU 和内存使用率，可通过 Metrics API 在 Kubernetes 中获得。 这些指标可以直接被用户访问，比如使用 kubectl top 命令行，或者被集群中的控制器 （例如 Horizontal Pod Autoscalers) 使用来做决策。
Metrics API 通过 Metrics API，你可以获得指定节点或 Pod 当前使用的资源量。 此 API 不存储指标值，因此想要获取某个指定节点 10 分钟前的 资源使用量是不可能的。</description></item><item><title>SELinux|Disabled、Permissive、Enforcing</title><link>https://shenhonglei.com/csdn/selinux/</link><pubDate>Mon, 14 Dec 2020 18:01:50 +0000</pubDate><guid>https://shenhonglei.com/csdn/selinux/</guid><description>SELinux是什么 SELinux，Security Enhanced Linux 的缩写，也就是安全强化的 Linux，是由美国国家安全局（NSA）联合其他安全机构（比如 SCC 公司）共同开发的，旨在增强传统 Linux 操作系统的安全性，解决传统 Linux 系统中自主访问控制（DAC）系统中的各种权限问题（如 root 权限过高等） SELinux Wiki SELinux 项目在 2000 年以 GPL 协议的形式开源，Red Hat 在其 Linux 发行版本中包括了 SELinux，(部署在 Linux 上用于增强系统安全的功能模块) ，基本上所有的 Linux 内核 2.</description></item><item><title>Hugo+gitalk为blog增彩</title><link>https://shenhonglei.com/csdn/gitalk/</link><pubDate>Fri, 11 Dec 2020 18:01:50 +0000</pubDate><guid>https://shenhonglei.com/csdn/gitalk/</guid><description>GiTalk gitalk 官方demo环境 gitalk github地址
Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件
Gitalk is a modern comment component based on GitHub Issue and Preact
特性：
使用 GitHub 登录 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko] 支持个人或组织 无干扰模式（设置 distractionFreeMode 为 true 开启） 快捷键提交评论 （cmd|ctrl + enter） #评论是调用github的api来完成的，不依赖第三方 https://api.</description></item></channel></rss>